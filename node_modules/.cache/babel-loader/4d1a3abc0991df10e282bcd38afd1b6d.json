{"ast":null,"code":"var _jsxFileName = \"/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/MakeNFT.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./MakeNFT.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Web3 = require(\"web3\");\n\nfunction MakeNFT(_ref) {\n  _s();\n\n  let {\n    web3,\n    account\n  } = _ref;\n  const [img, SetImg] = useState(\"\");\n  const [name, SetName] = useState(\"\");\n  const [link, SetLink] = useState(\"\");\n  const [description, SetDescription] = useState(\"\");\n  const [hash, SetHash] = useState([]);\n  const abi = [{\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  }, {\n    anonymous: false,\n    inputs: [{\n      indexed: true,\n      internalType: \"address\",\n      name: \"owner\",\n      type: \"address\"\n    }, {\n      indexed: true,\n      internalType: \"address\",\n      name: \"approved\",\n      type: \"address\"\n    }, {\n      indexed: true,\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\"\n    }],\n    name: \"Approval\",\n    type: \"event\"\n  }, {\n    anonymous: false,\n    inputs: [{\n      indexed: true,\n      internalType: \"address\",\n      name: \"owner\",\n      type: \"address\"\n    }, {\n      indexed: true,\n      internalType: \"address\",\n      name: \"operator\",\n      type: \"address\"\n    }, {\n      indexed: false,\n      internalType: \"bool\",\n      name: \"approved\",\n      type: \"bool\"\n    }],\n    name: \"ApprovalForAll\",\n    type: \"event\"\n  }, {\n    inputs: [{\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\"\n    }],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"address\",\n      name: \"recipient\",\n      type: \"address\"\n    }, {\n      internalType: \"string\",\n      name: \"tokenURI\",\n      type: \"string\"\n    }],\n    name: \"mintNFT\",\n    outputs: [{\n      internalType: \"uint256\",\n      name: \"\",\n      type: \"uint256\"\n    }],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    anonymous: false,\n    inputs: [{\n      indexed: true,\n      internalType: \"address\",\n      name: \"previousOwner\",\n      type: \"address\"\n    }, {\n      indexed: true,\n      internalType: \"address\",\n      name: \"newOwner\",\n      type: \"address\"\n    }],\n    name: \"OwnershipTransferred\",\n    type: \"event\"\n  }, {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"address\",\n      name: \"from\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\"\n    }],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"address\",\n      name: \"from\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bytes\",\n      name: \"_data\",\n      type: \"bytes\"\n    }],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"address\",\n      name: \"operator\",\n      type: \"address\"\n    }, {\n      internalType: \"bool\",\n      name: \"approved\",\n      type: \"bool\"\n    }],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    anonymous: false,\n    inputs: [{\n      indexed: true,\n      internalType: \"address\",\n      name: \"from\",\n      type: \"address\"\n    }, {\n      indexed: true,\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\"\n    }, {\n      indexed: true,\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\"\n    }],\n    name: \"Transfer\",\n    type: \"event\"\n  }, {\n    inputs: [{\n      internalType: \"address\",\n      name: \"from\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"to\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\"\n    }],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"address\",\n      name: \"newOwner\",\n      type: \"address\"\n    }],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"address\",\n      name: \"owner\",\n      type: \"address\"\n    }],\n    name: \"balanceOf\",\n    outputs: [{\n      internalType: \"uint256\",\n      name: \"\",\n      type: \"uint256\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\"\n    }],\n    name: \"getApproved\",\n    outputs: [{\n      internalType: \"address\",\n      name: \"\",\n      type: \"address\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"address\",\n      name: \"owner\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"operator\",\n      type: \"address\"\n    }],\n    name: \"isApprovedForAll\",\n    outputs: [{\n      internalType: \"bool\",\n      name: \"\",\n      type: \"bool\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [],\n    name: \"name\",\n    outputs: [{\n      internalType: \"string\",\n      name: \"\",\n      type: \"string\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [],\n    name: \"owner\",\n    outputs: [{\n      internalType: \"address\",\n      name: \"\",\n      type: \"address\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\"\n    }],\n    name: \"ownerOf\",\n    outputs: [{\n      internalType: \"address\",\n      name: \"\",\n      type: \"address\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"bytes4\",\n      name: \"interfaceId\",\n      type: \"bytes4\"\n    }],\n    name: \"supportsInterface\",\n    outputs: [{\n      internalType: \"bool\",\n      name: \"\",\n      type: \"bool\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{\n      internalType: \"string\",\n      name: \"\",\n      type: \"string\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"uint256\",\n      name: \"index\",\n      type: \"uint256\"\n    }],\n    name: \"tokenByIndex\",\n    outputs: [{\n      internalType: \"uint256\",\n      name: \"\",\n      type: \"uint256\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"address\",\n      name: \"owner\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"index\",\n      type: \"uint256\"\n    }],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [{\n      internalType: \"uint256\",\n      name: \"\",\n      type: \"uint256\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [{\n      internalType: \"uint256\",\n      name: \"tokenId\",\n      type: \"uint256\"\n    }],\n    name: \"tokenURI\",\n    outputs: [{\n      internalType: \"string\",\n      name: \"\",\n      type: \"string\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [{\n      internalType: \"uint256\",\n      name: \"\",\n      type: \"uint256\"\n    }],\n    stateMutability: \"view\",\n    type: \"function\"\n  }];\n  const CA = \"0x89B078E2eAA3c9c93d3DF3b7A9928a7d08471661\";\n  const my_pri = \"bfe5a22cf2611a04b95fa02dc63b53055ad0aad323156ce2faeaa267aef12abb\";\n  const my_pub = \"0x63545A377b3fE7286014572d9794C93B9FC5c5a3\";\n\n  const clickButton = async () => {\n    if (name !== \"\" && img !== \"\" && link !== \"\" && description !== \"\") {\n      const web3 = new Web3(new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\"));\n      const nftContract = await new web3.eth.Contract(abi, CA);\n      const nonce = await web3.eth.getTransactionCount(my_pub, \"latest\");\n      const NFT = await nftContract.methods.mintNFT(my_pub, img).encodeABI();\n      const tx = {\n        from: my_pub,\n        to: CA,\n        nonce: nonce,\n        gas: 5000000,\n        data: NFT\n      };\n      await web3.eth.accounts.signTransaction(tx, my_pri).then(signedTx => {\n        web3.eth.sendSignedTransaction(signedTx.rawTransaction, (err, hash) => {\n          if (!err) {\n            web3.eth.getTransaction(hash).then(console.log);\n          } else {\n            console.log(err);\n          }\n        });\n      });\n      const total = await nftContract.methods.totalSupply().call();\n      console.log(total);\n    } else {\n      alert(\"모두 입력해 주세요\");\n    }\n  };\n\n  const imgChange = async e => {\n    if (e.files === undefined) {\n      let reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]); // base64로 인코딩\n\n      reader.onload = event => {\n        const previewImage = document.querySelector(\".img\");\n        previewImage.src = event.target.result;\n        SetImg(event.target.result);\n      };\n    }\n  };\n\n  const nameChange = e => {\n    SetName(e.target.value);\n  };\n\n  const linkChange = e => {\n    SetLink(e.target.value);\n  };\n\n  const descriptionChange = e => {\n    SetDescription(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MakeNFT_back\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MakeNFT_BOX\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title\",\n        children: \"Create New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"img_span\",\n          children: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"img_example\",\n          children: \"File types supported: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF. Max size: 100 MB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/\",\n          className: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"img\",\n          type: \"file\",\n          placeholder: \"img\",\n          required: true,\n          onChange: imgChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name_span\",\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"name\",\n          required: true,\n          onChange: nameChange,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"link_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"link_span\",\n          children: \"link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"link\",\n          required: true,\n          onChange: linkChange,\n          value: link\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description_span\",\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"description\",\n          required: true,\n          onChange: descriptionChange,\n          value: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"createbutton\",\n        onClick: clickButton,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 548,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MakeNFT, \"7UtDpbvDB1HY7HikDtHQMi+wekA=\");\n\n_c = MakeNFT;\nexport default MakeNFT;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeNFT\");","map":{"version":3,"sources":["/Users/yuhojin/Desktop/BEB1stProject-05/src/Components/MakeNFT.js"],"names":["React","useState","Web3","require","MakeNFT","web3","account","img","SetImg","name","SetName","link","SetLink","description","SetDescription","hash","SetHash","abi","inputs","stateMutability","type","anonymous","indexed","internalType","outputs","CA","my_pri","my_pub","clickButton","providers","HttpProvider","nftContract","eth","Contract","nonce","getTransactionCount","NFT","methods","mintNFT","encodeABI","tx","from","to","gas","data","accounts","signTransaction","then","signedTx","sendSignedTransaction","rawTransaction","err","getTransaction","console","log","total","totalSupply","call","alert","imgChange","e","files","undefined","reader","FileReader","readAsDataURL","target","onload","event","previewImage","document","querySelector","src","result","nameChange","value","linkChange","descriptionChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./MakeNFT.css\";\nconst Web3 = require(\"web3\");\n\nfunction MakeNFT({ web3, account }) {\n  const [img, SetImg] = useState(\"\");\n  const [name, SetName] = useState(\"\");\n  const [link, SetLink] = useState(\"\");\n  const [description, SetDescription] = useState(\"\");\n  const [hash, SetHash] = useState([]);\n  const abi = [\n    {\n      inputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"approved\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"ApprovalForAll\",\n      type: \"event\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"string\",\n          name: \"tokenURI\",\n          type: \"string\",\n        },\n      ],\n      name: \"mintNFT\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"previousOwner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"OwnershipTransferred\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"renounceOwnership\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"_data\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"setApprovalForAll\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"transferOwnership\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getApproved\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n      ],\n      name: \"isApprovedForAll\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"owner\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ownerOf\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes4\",\n          name: \"interfaceId\",\n          type: \"bytes4\",\n        },\n      ],\n      name: \"supportsInterface\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"symbol\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenOfOwnerByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ];\n  const CA = \"0x89B078E2eAA3c9c93d3DF3b7A9928a7d08471661\";\n  const my_pri =\n    \"bfe5a22cf2611a04b95fa02dc63b53055ad0aad323156ce2faeaa267aef12abb\";\n  const my_pub = \"0x63545A377b3fE7286014572d9794C93B9FC5c5a3\";\n\n  const clickButton = async () => {\n    if (name !== \"\" && img !== \"\" && link !== \"\" && description !== \"\") {\n      const web3 = new Web3(\n        new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\")\n      );\n\n      const nftContract = await new web3.eth.Contract(abi, CA);\n\n      const nonce = await web3.eth.getTransactionCount(my_pub, \"latest\");\n\n      const NFT = await nftContract.methods.mintNFT(my_pub, img).encodeABI();\n\n      const tx = {\n        from: my_pub,\n        to: CA,\n        nonce: nonce,\n        gas: 5000000,\n        data: NFT,\n      };\n\n      await web3.eth.accounts.signTransaction(tx, my_pri).then((signedTx) => {\n        web3.eth.sendSignedTransaction(signedTx.rawTransaction, (err, hash) => {\n          if (!err) {\n            web3.eth.getTransaction(hash).then(console.log);\n          } else {\n            console.log(err);\n          }\n        });\n      });\n\n      const total = await nftContract.methods.totalSupply().call();\n      console.log(total);\n    } else {\n      alert(\"모두 입력해 주세요\");\n    }\n  };\n\n  const imgChange = async (e) => {\n    if (e.files === undefined) {\n      let reader = new FileReader();\n\n      reader.readAsDataURL(e.target.files[0]);\n      // base64로 인코딩\n\n      reader.onload = (event) => {\n        const previewImage = document.querySelector(\".img\");\n        previewImage.src = event.target.result;\n        SetImg(event.target.result);\n      };\n    }\n  };\n\n  const nameChange = (e) => {\n    SetName(e.target.value);\n  };\n\n  const linkChange = (e) => {\n    SetLink(e.target.value);\n  };\n  const descriptionChange = (e) => {\n    SetDescription(e.target.value);\n  };\n  return (\n    <div className=\"MakeNFT_back\">\n      <div className=\"MakeNFT_BOX\">\n        <div id=\"title\">Create New Item</div>\n        <div className=\"img_box\">\n          <span className=\"img_span\">img</span>\n          <span className=\"img_example\">\n            File types supported: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG,\n            GLB, GLTF. Max size: 100 MB\n          </span>\n          <img src=\"/\" className=\"img\" />\n          <input\n            id=\"img\"\n            type=\"file\"\n            placeholder=\"img\"\n            required\n            onChange={imgChange}\n          />\n          {/* <button id=\"imgbutton\" onClick={imgChange}>\n            Select Your Image!\n          </button> */}\n        </div>\n        <div className=\"name_box\">\n          <span className=\"name_span\">name</span>\n          <input\n            type=\"text\"\n            placeholder=\"name\"\n            required\n            onChange={nameChange}\n            value={name}\n          />\n        </div>\n        <div className=\"link_box\">\n          <span className=\"link_span\">link</span>\n          <input\n            type=\"text\"\n            placeholder=\"link\"\n            required\n            onChange={linkChange}\n            value={link}\n          />\n        </div>\n        <div className=\"description_box\">\n          <span className=\"description_span\">description</span>\n          <input\n            type=\"text\"\n            placeholder=\"description\"\n            required\n            onChange={descriptionChange}\n            value={description}\n          />\n        </div>\n        <button className=\"createbutton\" onClick={clickButton}>\n          Create\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MakeNFT;\n"]},"metadata":{},"sourceType":"module"}